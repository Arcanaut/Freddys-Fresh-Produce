{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport function useReactiveVar(rv) {\n  var value = rv();\n  var setValue = useState(value)[1];\n  useEffect(function () {\n    var probablySameValue = rv();\n\n    if (value !== probablySameValue) {\n      setValue(probablySameValue);\n    } else {\n      return rv.onNextChange(setValue);\n    }\n  }, [value]);\n  return value;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAM,SAAUC,cAAV,CAA4BC,EAA5B,EAA8C;AAClD,MAAMC,KAAK,GAAGD,EAAE,EAAhB;AAIA,MAAME,QAAQ,GAAGJ,QAAQ,CAACG,KAAD,CAAR,CAAgB,CAAhB,CAAjB;AAKAJ,WAAS,CAAC;AACR,QAAMM,iBAAiB,GAAGH,EAAE,EAA5B;;AACA,QAAIC,KAAK,KAAKE,iBAAd,EAAiC;AAG/BD,cAAQ,CAACC,iBAAD,CAAR;AACD,KAJD,MAIO;AACL,aAAOH,EAAE,CAACI,YAAH,CAAgBF,QAAhB,CAAP;AACD;AACF,GATQ,EASN,CAACD,KAAD,CATM,CAAT;AAWA,SAAOA,KAAP;AACD","names":["useEffect","useState","useReactiveVar","rv","value","setValue","probablySameValue","onNextChange"],"sources":["C:\\Users\\poohb\\Desktop\\group-project-3\\client\\node_modules\\@apollo\\src\\react\\hooks\\useReactiveVar.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ReactiveVar } from '../../core';\n\nexport function useReactiveVar<T>(rv: ReactiveVar<T>): T {\n  const value = rv();\n\n  // We don't actually care what useState thinks the value of the variable\n  // is, so we take only the update function from the returned array.\n  const setValue = useState(value)[1];\n\n  // We subscribe to variable updates on initial mount and when the value has\n  // changed. This avoids a subtle bug in React.StrictMode where multiple\n  // listeners are added, leading to inconsistent updates.\n  useEffect(() => {\n    const probablySameValue = rv();\n    if (value !== probablySameValue) {\n      // If the value of rv has already changed, we don't need to listen for the\n      // next change, because we can report this change immediately.\n      setValue(probablySameValue);\n    } else {\n      return rv.onNextChange(setValue);\n    }\n  }, [value]);\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}